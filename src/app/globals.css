@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: var(--font-geist-mono), monospace;
}

@layer base {
  :root {
    --background: 0 0% 0%; /* Black */
    --foreground: 0 0% 98%; /* Near White for high contrast on black */

    --card: 220 10% 18%; /* Darker, slightly bluish-grey for card interior */
    --card-foreground: 0 0% 95%;

    --popover: 220 6% 10%;
    --popover-foreground: 0 0% 95%;

    --primary: 330 100% 55%; /* Vibrant Pink (Hotpink-like) */
    --primary-foreground: 0 0% 100%; /* White */

    --secondary: 220 6% 25%; /* Darker secondary */
    --secondary-foreground: 0 0% 90%;

    --muted: 220 6% 20%;
    --muted-foreground: 0 0% 65%; /* Lighter muted foreground for readability */

    --accent: 129 100% 52%; /* Neon Green */
    --accent-foreground: 0 0% 5%; /* Dark for text on neon green */

    --destructive: 0 72% 51%; 
    --destructive-foreground: 0 0% 98%;

    --border: 220 6% 25%; /* Border for general elements */
    --input: 220 6% 18%;
    --ring: 330 100% 60%; /* Ring color related to new primary */

    --radius: 0.5rem;

    /* Chart colors */
    --chart-1: var(--primary); 
    --chart-2: var(--accent); 
    --chart-3: 220 70% 65%; 
    --chart-4: 300 70% 65%;
    --chart-5: 320 70% 65%;

    /* Sidebar specific colors */
    --sidebar-background: 220 6% 10%;
    --sidebar-foreground: 0 0% 90%;
    --sidebar-primary: var(--primary);
    --sidebar-primary-foreground: var(--primary-foreground);
    --sidebar-accent: var(--accent);
    --sidebar-accent-foreground: var(--accent-foreground);
    --sidebar-border: 220 6% 20%;
    --sidebar-ring: var(--ring);
  }

  .dark {
    --background: 0 0% 0%;
    --foreground: 0 0% 98%;

    --card: 220 10% 18%; /* Darker, slightly bluish-grey for card interior */
    --card-foreground: 0 0% 95%;

    --popover: 220 6% 10%;
    --popover-foreground: 0 0% 95%;

    --primary: 330 100% 55%;
    --primary-foreground: 0 0% 100%;

    --secondary: 220 6% 25%;
    --secondary-foreground: 0 0% 90%;

    --muted: 220 6% 20%;
    --muted-foreground: 0 0% 65%;

    --accent: 129 100% 52%;
    --accent-foreground: 0 0% 5%;

    --destructive: 0 63% 40%; 
    --destructive-foreground: 0 0% 98%;

    --border: 220 6% 25%;
    --input: 220 6% 18%;
    --ring: 330 100% 60%;
    
    --chart-1: var(--primary);
    --chart-2: var(--accent);
    --chart-3: 220 70% 70%;
    --chart-4: 300 70% 70%;
    --chart-5: 320 70% 70%;

    --sidebar-background: 220 6% 10%;
    --sidebar-foreground: 0 0% 90%;
    --sidebar-primary: var(--primary);
    --sidebar-primary-foreground: var(--primary-foreground);
    --sidebar-accent: var(--accent);
    --sidebar-accent-foreground: var(--accent-foreground);
    --sidebar-border: 220 6% 20%;
    --sidebar-ring: var(--ring);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    @apply dark;
  }
}

/* Helper for dashed border with foreground color */
.border-dashed-foreground {
  border-style: dashed;
  border-color: hsl(var(--foreground));
}

/* Cyberpunk Glitch Animation */
@keyframes glitch-animation {
  0% {
    clip-path: inset(calc(random() * 70%) 0 calc(random() * 20%) 0);
    transform: translate(calc(random() * -10px + 5px), calc(random() * -10px + 5px));
  }
  20% {
    clip-path: inset(calc(random() * 20%) 0 calc(random() * 60%) 0);
    transform: translate(calc(random() * -5px + 2.5px), calc(random() * -5px + 2.5px));
  }
  40% {
    clip-path: inset(calc(random() * 50%) 0 calc(random() * 30%) 0);
    transform: translate(calc(random() * -8px + 4px), calc(random() * -8px + 4px));
  }
  60% {
    clip-path: inset(calc(random() * 10%) 0 calc(random() * 80%) 0);
    transform: translate(calc(random() * -12px + 6px), calc(random() * -12px + 6px));
  }
  80% {
    clip-path: inset(calc(random() * 40%) 0 calc(random() * 10%) 0);
    transform: translate(calc(random() * -6px + 3px), calc(random() * -6px + 3px));
  }
  100% {
    clip-path: inset(calc(random() * 70%) 0 calc(random() * 20%) 0);
    transform: translate(0,0);
  }
}


.animate-glitch {
  position: relative;
  animation: glitch-animation-main 1.5s infinite linear alternate-reverse;
}

.animate-glitch::before,
.animate-glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: hsl(var(--background)); /* Match background */
  overflow: hidden;
}

.animate-glitch::before {
  left: 2px;
  text-shadow: -1px 0 hsl(var(--primary)); /* Use primary color for glitch */
  animation: glitch-animation 2s infinite linear alternate-reverse;
}

.animate-glitch::after {
  left: -2px;
  text-shadow: -1px 0 hsl(var(--accent)); /* Use accent color for glitch */
  animation: glitch-animation 1.5s infinite linear alternate-reverse; /* Slightly different timing */
}

/* Simplified keyframes for the main text if needed, or to combine with above pseudo-elements */
@keyframes glitch-animation-main {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(-1px, -1px); }
  60% { transform: translate(2px, 1px); }
  80% { transform: translate(1px, -2px); }
  100% { transform: translate(0); }
}
